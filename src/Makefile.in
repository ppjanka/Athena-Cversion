#    @WARNING1@
#    @WARNING2@
#===============================================================================
# FILE: Makefile.in
#
# PURPOSE: Template for src/Makefile.  When 'configure' is run, a new Makefile
# will be created (overwriting the last) from this template.
#
# TO BY-PASS CONFIGURE: copy this file into Makefile, and edit by hand to set
#   the appropriate object files, compiler options, and library paths.
#
#-------------------  object files  --------------------------------------------
CORE_OBJ = ath_array.o \
           ath_fft.o \
           ath_files.o \
	   ath_log.o \
           ath_signal.o \
           cc_pos.o \
           convert_var.o \
           dump_binary.o \
           dump_dx.o \
           dump_history.o \
           dump_tab.o \
           dump_vtk.o \
           esystem_prim.o \
           esystem_roe.o \
           flux_@FLUX_NAME@.o \
           init_grid.o \
           init_domain.o \
           integrate_1d.o \
           integrate_2d.o \
           integrate_3d_@INTEGRATOR@.o \
           integrate.o \
           lr_states_prim1.o \
           lr_states_prim2.o \
           lr_states_prim3.o \
           main.o \
           new_dt.o \
           output.o \
           output_fits.o \
           output_pdf.o \
           output_pgm.o \
           output_ppm.o \
           output_tab.o \
           par.o \
           problem.o \
           restart.o \
           set_bvals.o \
           show_config.o \
           utils.o

ifeq (@FLUX_NAME@,roe)
   OBJ = $(CORE_OBJ) flux_hlle.o
else
   OBJ = $(CORE_OBJ)
endif

FFT_OBJ =
ifeq (@MPI_MODE@,MPI_PARALLEL)
ifeq (@FFT_MODE@,USE_FFT)
   FFT_OBJ = ../fftsrc/factor.o \
             ../fftsrc/fft_2d.o \
             ../fftsrc/fft_3d.o \
             ../fftsrc/pack_2d.o \
             ../fftsrc/pack_3d.o \
             ../fftsrc/remap_2d.o \
             ../fftsrc/remap_3d.o
endif
endif

#-------------------  macro definitions  ---------------------------------------

BIN = ${EXEDIR}athena
EXEDIR = ../bin/
SRC = $(OBJ:.o=.c)

include ../Makeoptions

#--------------------  implicit rules  -----------------------------------------

.c.o:
	${CC} ${CFLAGS} -c $<

#---------------------  targets  -----------------------------------------------

all:	compile

.PHONY: compile
compile: ${BIN}

${BIN}: ${OBJ} ${FFT_OBJ}
	${LDR} $(OPT) -o ${EXEDIR}athena ${OBJ} ${FFT_OBJ} ${LIB}

help:
	@echo This is the Athena Makefile
	@echo Type 'make compile' to generate Athena executable
	@echo Type 'make clean'   to remove '*.o' files
	@echo OBJ=$(OBJ)

.PHONY: clean
clean:
	rm -f *.o Makedepend $(BIN)

depend: Makedepend

Makedepend:
ifeq ($(MACHINE),orangena)
	makedepend ${CFLAGS} ${SRC} > Makedepend
else
	${CC} -MM ${CFLAGS} ${SRC} > Makedepend
endif

# a few functionality tests of some modules of the code
par:	par.c
	$(CC) $(CFLAGS) -DTESTBED -o par par.c

# this forces a rebuild of all objects, if code re-configure'd

include Makedepend
