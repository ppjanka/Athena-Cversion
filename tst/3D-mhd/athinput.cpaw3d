<comment>

problem = 3D Circularly Polarized Alfven Wave
author  = G. Toth
journal = JCP, vol. 161, pp. 605-662 (2000). 
config  = --with-problem=cpaw2d

<job>

problem_id   = cpaw         # problem ID: basename of output filenames
maxout       = 4            # Output blocks number from 1 -> maxout

<time>

cour_no         = 0.4       # The Courant, Friedrichs, & Lewy (CFL) Number
nlim            = 2000      # cycle limit
tlim            = 5.0       # time limit

<output1>
out_fmt = hst               # History data dump
dt      = 0.1               # time increment between outputs

<output2>
out_fmt = bin               # Binary data dump
dt      = 0.1               # time increment between outputs

<output3>
out_fmt = ppm               # ppm data dump
out     = V3                # 3-component of velocity (shows wave well)
id      = V3
dmin    = -0.1
dmax    = 0.1
palette = jh_colors
ix3     = 1
dt      = 0.01               # time increment between outputs

<output4>
out_fmt = ppm               # ppm data dump
out     = d                # density (errors related to total P not constant)
id      = d 
dmin    = 1.0002
dmax    = 0.9998
palette = jh_colors
ix3     = 1
dt      = 0.01               # time increment between outputs

<grid>

Nx1             = 64        # Number of zones in X1-direction
x1min           = 0.0       # minimum value of X1
x1max           = 3.0       # maximum value of X1
ibc_x1          = 4         # inner (X1) boundary flag
obc_x1          = 4         # outer (X) boundary flag

Nx2             = 32        # Number of zones in X2-direction
x2min           = 0.0       # minimum value of X2
x2max           = 1.5       # maximum value of X2
ibc_x2          = 4         # inner (X2) boundary flag
obc_x2          = 4         # outer (X2) boundary flag

Nx3             = 32        # Number of zones in X3-direction
x3min           = 0.0       # minimum value of X3
x3max           = 1.5       # maximum value of X3
ibc_x3          = 4         # inner (X3) boundary flag
obc_x3          = 4         # outer (X3) boundary flag

<parallel>
NGrid_x1 = 1
NGrid_x2 = 1
NGrid_x3 = 2

<problem>

gamma = 1.6666666666666667  # gamma = C_p/C_v
iso_csound = 0.1 
pres    = 0.1               # pressure
v_par   = 0.0               # vpar = {0, 1} -> {traveling, standing} wave
b_par   = 1.0               # B parallel
b_perp  = 0.1               # B perpendicular
